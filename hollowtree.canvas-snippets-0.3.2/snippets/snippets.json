{
    "m180": {
        "prefix": "m180",
        "body": " Math.PI / 180 * ",
        "description": "Math.PI / 180 * "
    },
    "addColorStop": {
        "prefix": "addColorStop",
        "body": [
            "${1}.addColorStop(${2:number}, '${3:color}');",
            "${4}"
        ],
        "description": "context.addColorStop"
    },
    "arc": {
        "prefix": "arc",
        "body": [
            "context.arc(${1:x}, ${2:y}, ${3:radius}, ${4:Math.PI / 180 * }${5:startAngle}, ${6:Math.PI / 180 * }${7:endAngle}, ${8:anticlockwise});",
            "${9}"
        ],
        "description": "context.arc"
    },
    "arcTo": {
        "prefix": "arcTo",
        "body": [
            "context.arcTo(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:radius});",
            "${6}"
        ],
        "description": "context.arcTo"
    },
    "beginPath": {
        "prefix": "beginPath",
        "body": [
            "context.beginPath();",
            "${1}"
        ],
        "description": "context.strokeStyle"
    },
    "bezierCurveTo": {
        "prefix": "bezierCurveTo",
        "body": [
            "context.bezierCurveTo(${1:cp1x}, ${2:cp1y}, ${3:cp2x}, ${4:cp2y}, ${5:x}, ${6:y});",
            "${7}"
        ],
        "description": "context.bezierCurveTo"
    },
    "clearRect": {
        "prefix": "clearRect",
        "body": [
            "context.clearRect(${1:x}, ${2:y}, ${3:width}, ${4:height});",
            "${5}"
        ],
        "description": "context.clearRect"
    },
    "clip": {
        "prefix": "clip",
        "body": [
            "context.clip();",
            "${1}"
        ],
        "description": "context.clip"
    },
    "closePath": {
        "prefix": "closePath",
        "body": [
            "context.closePath();",
            "${1}"
        ],
        "description": "context.closePath"
    },
    "createImageData": {
        "prefix": "createImageData",
        "body": [
            "context.createImageData(${1:width}, ${2:height});",
            "${3}"
        ],
        "description": "context.createImageData"
    },
    "createLinearGradient": {
        "prefix": "createLinearGradient",
        "body": [
            "context.createLinearGradient(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2});",
            "${5}"
        ],
        "description": "context.createLinearGradient"
    },
    "createPattern": {
        "prefix": "createPattern",
        "body": [
            "context.createPattern(${1:Image}, ${2:repetition});",
            "${3}"
        ],
        "description": "context.createPattern \n\nimage:\n1. HTMLImageElement (<img>)\n2. HTMLVideoElement (<video>)\n3. HTMLCanvasElement (<canvas>)\n4. CanvasRenderingContext2D\n5. ImageBitmap\n6. ImageData, or a\n7. Blob.\n\nrepetition:\n1. repeat\n2. repeat-x\n3. repeat-y\n4. no-repeat"
    },
    "createRadialGradient": {
        "prefix": "createRadialGradient",
        "body": [
            "context.createRadialGradient(${1:x1}, ${2:y1}, ${3:r1}, ${4:x2}, ${5:y2}, ${6:r2});",
            "${7}"
        ],
        "description": "context.createRadialGradient"
    },
    "direction": {
        "prefix": "direction",
        "body": [
            "context.direction='${1:inherit | ltr | rtl}';",
            "${2}"
        ],
        "description": "context.direction"
    },
    "drawFocusIfNeeded": {
        "prefix": "drawFocusIfNeeded",
        "body": [
            "context.drawFocusIfNeeded(${1:path, }${2:element});",
            "${3}"
        ],
        "description": "context.drawFocusIfNeeded"
    },
    "drawImage": {
        "prefix": "drawImage",
        "body": [
            "context.drawImage(${1:Image}, ${2:dX}, ${3:dY}${4:, dWidth}${5:, dHeight});",
            "${6}"
        ],
        "description": "context.drawImage"
    },
    "fill": {
        "prefix": "fill",
        "body": [
            "context.fill();",
            "${1}"
        ],
        "description": "context.fill"
    },
    "fillRect": {
        "prefix": "fillRect",
        "body": [
            "context.fillRect(${1});",
            "${2}"
        ],
        "description": "context.fillRect"
    },
    "fillStyle": {
        "prefix": "fillStyle",
        "body": [
            "context.fillStyle='${1:color | gradient | pattern}';",
            "${2}"
        ],
        "description": "context.fillStyle"
    },
    "fillText": {
        "prefix": "fillText",
        "body": [
            "context.fillText(${1:text}, ${2:x}, ${3:y}${4:, maxWidth});",
            "${5}"
        ],
        "description": "context.fillText"
    },
    "font": {
        "prefix": "font",
        "body": [
            "context.font='${1:10}px ${2:sans-serif}';",
            "${3}"
        ],
        "description": "context.font"
    },
    "getContext": {
        "prefix": "getContext",
        "body": [
            "getContext('${1:2d}');",
            "${2}"
        ],
        "description": "getContext"
    },
    "getImageData": {
        "prefix": "getImageData",
        "body": [
            "context.getImageData(${1:sx}, ${2:sy}, ${3:sw}, ${4:sh});",
            "${5}"
        ],
        "description": "context.getImageData"
    },
    "getLineDash": {
        "prefix": "getLineDash",
        "body": [
            "context.getLineDash();",
            "${1}"
        ],
        "description": "context.getLineDash"
    },
    "globalAlpha": {
        "prefix": "globalAlpha",
        "body": [
            "context.globalAlpha=${1:alpha};",
            "${2}"
        ],
        "description": "context.globalAlpha"
    },
    "globalCompositeOperation": {
        "prefix": "globalCompositeOperation",
        "body": [
            "context.globalCompositeOperation='${1:source-over | copy | destination-in | destination-out | destination-over | lighter | source-atop | source-in | source-out | xor}';",
            "${2}"
        ],
        "description": "context.globalCompositeOperation"
    },
    "imageSmoothingEnabled": {
        "prefix": "imageSmoothingEnabled",
        "body": [
            "context.mozImageSmoothingEnabled = ${1:true};",
            "context.webkitImageSmoothingEnabled = ${1:true};",
            "context.msImageSmoothingEnabled = ${1:true};",
            "context.imageSmoothingEnabled = ${1:true};",
            "${2}"
        ],
        "description": "context.imageSmoothingEnabled"
    },
    "isPointInPath": {
        "prefix": "isPointInPath",
        "body": [
            "context.isPointInPath(${1:x}, ${2:y});",
            "${3}"
        ],
        "description": "context.isPointInPath"
    },
    "isPointInStroke": {
        "prefix": "isPointInStroke",
        "body": [
            "context.isPointInStroke(${1:path, }${2:x}, ${3:y});",
            "${4}"
        ],
        "description": "context.isPointInStroke"
    },
    "lineCap": {
        "prefix": "lineCap",
        "body": [
            "context.lineCap='${1:butt | round | square}';",
            "${2}"
        ],
        "description": "context.lineCap"
    },
    "lineDashOffset": {
        "prefix": "lineDashOffset",
        "body": [
            "context.lineDashOffset=${1:value};",
            "${2}"
        ],
        "description": "context.lineDashOffset"
    },
    "lineJoin": {
        "prefix": "lineJoin",
        "body": [
            "context.lineJoin='${1:miter | bevel | round}';",
            "${2}"
        ],
        "description": "context.lineJoin"
    },
    "lineTo": {
        "prefix": "lineTo",
        "body": [
            "context.lineTo(${1:x}, ${2:y});",
            "${3}"
        ],
        "description": "context.lineTo"
    },
    "lineWidth": {
        "prefix": "lineWidth",
        "body": [
            "context.lineWidth=${1:width};",
            "${2}"
        ],
        "description": "context.lineWidth"
    },
    "measureText": {
        "prefix": "measureText",
        "body": [
            "context.measureText(${1:text});",
            "${2}"
        ],
        "description": "context.measureText"
    },
    "miterLimit": {
        "prefix": "miterLimit",
        "body": [
            "context.miterLimit=${1:number};",
            "${2}"
        ],
        "description": "context.miterLimit"
    },
    "moveTo": {
        "prefix": "moveTo",
        "body": [
            "context.moveTo(${1:x}, ${2:y});",
            "${3}"
        ],
        "description": "context.moveTo"
    },
    "putImageData": {
        "prefix": "putImageData",
        "body": [
            "context.putImageData(${1:imagedata}, ${2:dx}, ${3:dy}${4:, dirtyX}${5:, dirtyY}${6:, dirtyWidth}${7:, dirtyHeight});",
            "${8}"
        ],
        "description": "context.putImageData"
    },
    "quadraticCurveTo": {
        "prefix": "quadraticCurveTo",
        "body": [
            "context.quadraticCurveTo(${1:cpx}, ${2:cpy}, ${3:x}, ${4:y});",
            "${5}"
        ],
        "description": "context.quadraticCurveTo"
    },
    "rect": {
        "prefix": "rect",
        "body": [
            "context.rect(${1:x}, ${2:y}, ${3:width}, ${4:height});",
            "${5}"
        ],
        "description": "context.rect"
    },
    "resetTransform": {
        "prefix": "resetTransform",
        "body": [
            "context.resetTransform();",
            "${1}"
        ],
        "description": "context.resetTransform  \nYou can also use the CanvasRenderingContext2D.setTransform() method to reset the current transform to the identity matrix, like so:\ncontext.setTransform(1, 0, 0, 1, 0, 0);"
    },
    "restore": {
        "prefix": "restore",
        "body": [
            "context.restore();",
            "${1}"
        ],
        "description": "context.restore"
    },
    "rotate": {
        "prefix": "rotate",
        "body": [
            "context.rotate(${1:Math.PI / 180 * }${2:degree});",
            "${3}"
        ],
        "description": "context.rotate"
    },
    "save": {
        "prefix": "save",
        "body": [
            "context.save();",
            "${1}"
        ],
        "description": "context.save"
    },
    "scale": {
        "prefix": "scale",
        "body": [
            "context.scale(${1:x}, ${2:y});",
            "${3}"
        ],
        "description": "context.scale"
    },
    "setLineDash": {
        "prefix": "setLineDash",
        "body": [
            "context.setLineDash([${1:Array}]);",
            "${2}"
        ],
        "description": "context.setLineDash"
    },
    "setTransform": {
        "prefix": "setTransform",
        "body": [
            "context.setTransform(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${5:e}, ${6:f});",
            "${7}"
        ],
        "description": "context.setTransform \n a: Horizontal scaling. \n b: Horizontal skewing. \n c: Vertical skewing. \n d: Vertical scaling. \n e: Horizontal moving. \n f: Vertical moving."
    },
    "shadowBlur": {
        "prefix": "shadowBlur",
        "body": [
            "context.shadowBlur=${1:blur};",
            "${2}"
        ],
        "description": "context.shadowBlur"
    },
    "shadowColor": {
        "prefix": "shadowColor",
        "body": [
            "context.shadowColor='${1:color}';",
            "${2}"
        ],
        "description": "context.shadowColor"
    },
    "shadowOffsetX": {
        "prefix": "shadowOffsetX",
        "body": [
            "context.shadowOffsetX=${1:x};",
            "${2}"
        ],
        "description": "context.shadowOffsetX"
    },
    "shadowOffsetY": {
        "prefix": "shadowOffsetY",
        "body": [
            "context.shadowOffsetY=${1:y};",
            "${2}"
        ],
        "description": "context.shadowOffsetY"
    },
    "stroke": {
        "prefix": "stroke",
        "body": [
            "context.stroke();",
            "${1}"
        ],
        "description": "context.stroke"
    },
    "strokeRect": {
        "prefix": "strokeRect",
        "body": [
            "context.strokeRect(${1:x}, ${2:y}, ${3:width}, ${4:height});",
            "${5}"
        ],
        "description": "context.strokeRect"
    },
    "strokeStyle": {
        "prefix": "strokeStyle",
        "body": [
            "context.strokeStyle='${1:color}';",
            "${2}"
        ],
        "description": "context.strokeStyle"
    },
    "strokeText": {
        "prefix": "strokeText",
        "body": [
            "context.strokeText(${1:text}, ${2:x}, ${3:y}${4:, maxWidth});",
            "${5}"
        ],
        "description": "context.strokeText"
    },
    "textAlign": {
        "prefix": "textAlign",
        "body": [
            "context.textAlign='${1:start | left | center | right |end}';",
            "${2}"
        ],
        "description": "context.textAlign"
    },
    "textBaseline": {
        "prefix": "textBaseline",
        "body": [
            "context.textBaseline='${1:top | hanging | middle | alphabetic | ideographic | bottom}';",
            "${2}"
        ],
        "description": "context.textBaseline"
    },
    "toDataURL": {
        "prefix": "toDataURL",
        "body": [
            "${1}.toDataURL(${2});",
            "${3}"
        ],
        "description": "toDataURL()"
    },
    "transform": {
        "prefix": "transform",
        "body": [
            "context.transform(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${5:e}, ${6:f});",
            "${7}"
        ],
        "description": "context.transform"
    },
    "translate": {
        "prefix": "translate",
        "body": [
            "context.translate(${1:x}, ${2:y});",
            "${3}"
        ],
        "description": "context.translate"
    }
}